// Code generated by "stringer -type=OPCODE"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OP_NONE-0]
	_ = x[OP_CLEAR-1]
	_ = x[OP_JMP-2]
	_ = x[OP_SUBROUTINE-3]
	_ = x[OP_RET-4]
	_ = x[OP_EQUAL-5]
	_ = x[OP_NEQUAL-6]
	_ = x[OP_REG_EQUAL-7]
	_ = x[OP_REG_NEQUAL-8]
	_ = x[OP_REG_SET-9]
	_ = x[OP_REG_ADD-10]
	_ = x[OP_REG_SET_REG-11]
	_ = x[OP_OR-12]
	_ = x[OP_AND-13]
	_ = x[OP_XOR-14]
	_ = x[OP_ADD_EQUAL-15]
	_ = x[OP_SUB-16]
	_ = x[OP_SUB_INV-17]
	_ = x[OP_RSHIFT-18]
	_ = x[OP_LSHIFT-19]
	_ = x[OP_SET_IDX-20]
	_ = x[OP_JMP_OFF-21]
	_ = x[OP_RANDOM-22]
	_ = x[OP_DISPLAY-23]
	_ = x[OP_KEY_PRESSED-24]
	_ = x[OP_KEY_NOT_PRESSED-25]
	_ = x[OP_GET_DTIMER-26]
	_ = x[OP_SET_DTIMER-27]
	_ = x[OP_SET_STIMER-28]
	_ = x[OP_ADD_IDX-29]
	_ = x[OP_GET_KEY-30]
	_ = x[OP_FONT-31]
	_ = x[OP_BCD-32]
	_ = x[OP_STORE_MEM-33]
	_ = x[OP_LOAD_MEM-34]
}

const _OPCODE_name = "OP_NONEOP_CLEAROP_JMPOP_SUBROUTINEOP_RETOP_EQUALOP_NEQUALOP_REG_EQUALOP_REG_NEQUALOP_REG_SETOP_REG_ADDOP_REG_SET_REGOP_OROP_ANDOP_XOROP_ADD_EQUALOP_SUBOP_SUB_INVOP_RSHIFTOP_LSHIFTOP_SET_IDXOP_JMP_OFFOP_RANDOMOP_DISPLAYOP_KEY_PRESSEDOP_KEY_NOT_PRESSEDOP_GET_DTIMEROP_SET_DTIMEROP_SET_STIMEROP_ADD_IDXOP_GET_KEYOP_FONTOP_BCDOP_STORE_MEMOP_LOAD_MEM"

var _OPCODE_index = [...]uint16{0, 7, 15, 21, 34, 40, 48, 57, 69, 82, 92, 102, 116, 121, 127, 133, 145, 151, 161, 170, 179, 189, 199, 208, 218, 232, 250, 263, 276, 289, 299, 309, 316, 322, 334, 345}

func (i OPCODE) String() string {
	if i < 0 || i >= OPCODE(len(_OPCODE_index)-1) {
		return "OPCODE(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OPCODE_name[_OPCODE_index[i]:_OPCODE_index[i+1]]
}
